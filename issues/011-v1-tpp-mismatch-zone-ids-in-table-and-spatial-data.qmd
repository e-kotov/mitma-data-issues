---
title: "Mismatch of zone ids in spatial data and trips per person table for municipal zoning"
from: markdown+emoji
code-annotations: hover
date: "2024-08-17"
date-modified: "2024-08-17"
categories:
    - tabular data
    - incorrect data
    - zone IDs mismatch
    - "importance: high"
issue-importance: "3 - high"
status: "⚠️ active"
---

---

**Status**: {{< meta status >}}

**Importance**: {{< meta issue-importance >}}

**Summary**: The zone IDs in the municipal trips per person data (`maestra2-mitma-municipios`) are not consistent with the zone IDs in the municipal boundaries data (`zonificacion-municipios/municipios_mitma.shp`). **Also see related issue [012-v1-tpp-district-files-in-municipality-folders](012-v1-tpp-district-files-in-municipality-folders.qmd), which may be one of the culprits of the current issue.**

**Expected Results**: The zone IDs in the municipal trips per person data (`maestra2-mitma-municipios`) should be consistent with the zone IDs in the municipal boundaries data (`zonificacion-municipios/municipios_mitma.shp`).

---


---


### Steps to Reproduce

1. **Load Data**

Load libraries and define data files.

```{r}
#| output: false

library(tidyverse)
library(sf)
library(here)
library(DT)


trips_per_person_file_2020_03_14 <- here("data/raw_data_cache/v1/maestra2-mitma-municipios/ficheros-diarios/year=2020/month=3/day=14/maestra_2_mitma_municipio.txt.gz")
trips_per_person_file_2020_10_01 <- here("data/raw_data_cache/v1/maestra2-mitma-municipios/ficheros-diarios/year=2020/month=10/day=1/maestra_2_mitma_municipio.txt.gz")
municipal_boundaries_data_file <- here("data/raw_data_cache/v1/zonificacion-municipios/municipios_mitma.shp")
district_boundaries_data_file <- here("data/raw_data_cache/v1/zonificacion-distritos/distritos_mitma.shp")
```

Load the data.


```{r}
trips_per_person_2020_03_14 <- readr::read_delim(trips_per_person_file_2020_03_14, delim = "|", show_col_types = FALSE, name_repair = "unique_quiet")
trips_per_person_2020_10_01 <- readr::read_delim(trips_per_person_file_2020_10_01, delim = "|", show_col_types = FALSE, name_repair = "unique_quiet")
municipal_boundaries <- read_sf(municipal_boundaries_data_file)
district_boundaries <- read_sf(district_boundaries_data_file)
```

```{r}
glimpse(trips_per_person_2020_03_14)
glimpse(trips_per_person_2020_10_01)
glimpse(municipal_boundaries)
glimpse(district_boundaries)
```


### Results

2. **Not all zone IDs in the municipal level trips per person dataset can be found in the municipal boundaries dataset.**

Not all zone (`distrito`) IDs in the municipal level trips per person dataset can be found in the municipal boundaries dataset. For example, on `2020-03-14`, all IDs do mathc, but on `2020-10-01`, 5 IDs mismatch.

```{r}
sum(!unique(trips_per_person_2020_03_14$distrito) %in% unique(municipal_boundaries$ID))
sum(!unique(trips_per_person_2020_10_01$distrito) %in% unique(municipal_boundaries$ID))
```

Here are the mismatching IDs:

```{r}
unique(trips_per_person_2020_10_01$distrito)[
  !unique(trips_per_person_2020_10_01$distrito) %in% unique(municipal_boundaries$ID)
]
```

In the spatial dataset we do not have the IDs above, however we do have similar IDs with extra digits:

```{r}
municipal_boundaries |> filter(ID %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) # these IDs exist
municipal_boundaries |> filter(ID %in% c("04902", "28006", "28106", "28123", "28127")) # these do not
```


It seems like at some point in time in this dataset, the IDs have changed, as we cannot find the same IDs in the data for different dates, as seen below:

```{r}
trips_per_person_2020_03_14 |> filter(distrito %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
trips_per_person_2020_03_14 |> filter(distrito %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
```

```{r}
trips_per_person_2020_10_01 |> filter(distrito %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
trips_per_person_2020_10_01 |> filter(distrito %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
```


The longer IDs are not expected to be in the spatial data for municipalities, but they are there, as seen below:

```{r}
municipal_boundaries |> filter(ID %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow() # these IDs exist
municipal_boundaries |> filter(ID %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow() # these do not
```

What makes the matters more complicated, is that these longer IDs also can be found in the district boundaries, as seen below:

```{r}
district_boundaries |> filter(ID %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow() # these IDs exist
district_boundaries |> filter(ID %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow() # these do not
```

Threfore it is unclear with which spatial data the trip counts in the trips per person data for municipalities is actually associated.

Let's filter the spatial data for both districts and municipalities to only include these IDs and compare them visually.

```{r}
municipal_boundaries_subset <- municipal_boundaries |> filter(ID %in% c("0490201", "2800601", "2810601", "2812301", "2812701"))
district_boundaries_subset <- district_boundaries |> filter(ID %in% c("0490201", "2800601", "2810601", "2812301", "2812701"))
```

```{r}
ggplot()+
  geom_sf(data = municipal_boundaries_subset, fill = "grey50", col = NA) +
  geom_sf(data = district_boundaries_subset, fill = NA, col = "blue")
```

These seem to match perfectly, therefore they can probably be assumed to be the same.

### Is there such an issue with the district level data?

```{r}
trips_per_person_2020_03_14_distr <- readr::read_delim(
  here("data/raw_data_cache/v1/maestra2-mitma-distritos/ficheros-diarios/year=2020/month=3/day=14/maestra_2_mitma_distrito.txt.gz"),
  delim = "|", show_col_types = FALSE, name_repair = "unique_quiet")
trips_per_person_2020_10_01_distr <- readr::read_delim(
  here("data/raw_data_cache/v1/maestra2-mitma-distritos/ficheros-diarios/year=2020/month=10/day=1/maestra_2_mitma_distrito.txt.gz"),
  delim = "|", show_col_types = FALSE, name_repair = "unique_quiet")


trips_per_person_2020_03_14_distr |> filter(distrito %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
trips_per_person_2020_03_14_distr |> filter(distrito %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()

trips_per_person_2020_10_01_distr |> filter(distrito %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
trips_per_person_2020_10_01_distr |> filter(distrito %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
```

No such issue, the data for districts seem to be consistent.

### Is there such an issue with the origin-destination data?

```{r}
od_municip_2020_03_14 <- readr::read_delim(
  here("data/raw_data_cache/v1/maestra1-mitma-municipios/ficheros-diarios/year=2020/month=3/day=14/maestra_1_mitma_municipio.txt.gz"),
  delim = "|", show_col_types = FALSE, name_repair = "unique_quiet")


od_municip_2020_10_01 <- readr::read_delim(
  here("data/raw_data_cache/v1/maestra1-mitma-municipios/ficheros-diarios/year=2020/month=10/day=1/maestra_1_mitma_municipio.txt.gz"),
  delim = "|", show_col_types = FALSE, name_repair = "unique_quiet")


od_municip_2020_03_14 |> filter(origen %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_municip_2020_03_14 |> filter(origen %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
od_municip_2020_03_14 |> filter(destino %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_municip_2020_03_14 |> filter(destino %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()

od_municip_2020_10_01 |> filter(origen %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_municip_2020_10_01 |> filter(origen %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
od_municip_2020_10_01 |> filter(destino %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_municip_2020_10_01 |> filter(destino %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
```

The data for origin-destination suffers from the same issue as the trips per person data.

Check district level data:

```{r}
od_distr_2020_03_14 <- readr::read_delim(
  here("data/raw_data_cache/v1/maestra1-mitma-distritos/ficheros-diarios/year=2020/month=3/day=14/maestra_1_mitma_distrito.txt.gz"),
  delim = "|", show_col_types = FALSE, name_repair = "unique_quiet"
)



od_distr_2020_10_01 <- readr::read_delim(
  here("data/raw_data_cache/v1/maestra1-mitma-distritos/ficheros-diarios/year=2020/month=10/day=1/maestra_1_mitma_distrito.txt.gz"),
  delim = "|", show_col_types = FALSE, name_repair = "unique_quiet"
)

od_distr_2020_03_14 |> filter(origen %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_distr_2020_03_14 |> filter(origen %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
od_distr_2020_03_14 |> filter(destino %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_distr_2020_03_14 |> filter(destino %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()

od_distr_2020_10_01 |> filter(origen %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_distr_2020_10_01 |> filter(origen %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()
od_distr_2020_10_01 |> filter(destino %in% c("0490201", "2800601", "2810601", "2812301", "2812701")) |> nrow()
od_distr_2020_10_01 |> filter(destino %in% c("04902", "28006", "28106", "28123", "28127")) |> nrow()

```

District level data does not contain shorter zone IDs.

Let us chek if the district level data on number of trips matches the number of trips per person in the municipality level data.

```{r}
od_municip_2020_03_14 |> filter(origen %in% c("0490201") & destino %in% c("03005_AM"))
od_distr_2020_03_14 |> filter(origen %in% c("0490201") & destino %in% c("03005_AM"))
```

```{r}
od_municip_2020_10_01 |> filter(origen %in% c("04902") & destino %in% c("03058_AM"))
od_distr_2020_10_01 |> filter(origen %in% c("0490201") & destino %in% c("03058_AM"))
```

The data matches between municipal and district level datasests. Therefore, we can confrim that shorter zones IDs in some of the municipal level tables actually correspond to the longer zone IDs.

### Additional analsysis using the full data

Analaysis of the full trips per person dates range shows that the ID issue is random across speicific dates. This is done using [{spanishoddata}](https://github.com/ropensci/spanishoddata) package with DuckDB under the hood and is not fully reproducible here to avoid the large data download, but the results can be observed below:

```
> tpp_muni_raw |> dplyr::filter(distrito == "04902") |> dplyr::reframe(dates_range = range(fecha))
# A tibble: 2 × 1
  dates_range
  <date>     
1 2020-02-14 
2 2021-05-09 
> tpp_muni_raw |> dplyr::filter(distrito == "0490201") |> dplyr::reframe(dates_range = range(fecha))
# A tibble: 2 × 1
  dates_range
  <date>     
1 2020-02-21 
2 2021-02-05 
```

Also, there are in fact more IDs that are affecteed by the issue. For example (again, on the full dataset):

```
> tpp_muni_raw |> dplyr::filter(distrito == "0105901") |> dplyr::reframe(dates_range = range(fecha))
# A tibble: 2 × 1
  dates_range
  <date>     
1 2021-02-05 
2 2021-02-05 
> tpp_muni_raw |> dplyr::filter(distrito == "01059") |> dplyr::reframe(dates_range = range(fecha))
# A tibble: 2 × 1
  dates_range
  <date>     
1 2020-02-14 
2 2021-05-09
```

```{r}
trips_per_person_2021_02_05 <- readr::read_delim(here("data/raw_data_cache/v1/maestra2-mitma-municipios/ficheros-diarios/year=2021/month=2/day=5/maestra_2_mitma_municipio.txt.gz"), delim = "|", show_col_types = FALSE, name_repair = "unique_quiet")
```

```{r}
trips_per_person_2020_03_14 |> filter(distrito %in% c("01059"))
trips_per_person_2020_03_14_distr |> filter(distrito %in% c("01059"))
```

```{r}
od_municip_2020_03_14 |> filter(origen %in% c("01059") & destino %in% c("01001_AM") & periodo == "03")
od_distr_2020_03_14 |> filter(origen %in% c("01059"))
```

```{r}
trips_per_person_2020_03_14 |> filter(distrito %in% c("0105901"))
trips_per_person_2020_03_14 |> filter(distrito %in% c("01059"))
trips_per_person_2020_10_01 |> filter(distrito %in% c("0105901"))
trips_per_person_2020_10_01 |> filter(distrito %in% c("01059"))
```

The case with the ID 0105901 is more complicated as it does not directly match with the ID 01059. 0105901 zone is a much smaller zone, one of many that are nested within the 01059 zone.

This may be fixed with thereference tables:

```{r}
relaciones_distrito_mitma <- readr::read_delim(
  "https://opendata-movilidad.mitma.es/relaciones_distrito_mitma.csv", delim = "|", show_col_types = FALSE)
DT::datatable(relaciones_distrito_mitma)
```

```{r}
relaciones_municipio_mitma <- readr::read_delim(
  "https://opendata-movilidad.mitma.es/relaciones_municipio_mitma.csv", delim = "|", show_col_types = FALSE)
DT::datatable(relaciones_municipio_mitma)
```

Also, this is probably caused by a related issue [012-v1-tpp-district-files-in-municipality-folders](012-v1-tpp-district-files-in-municipality-folders.qmd).


### Conclusion and how the issue should be fixed

The zone IDs in the tables for municipal level trips per person data and spatial data do not match starting with a certain date. The zones with IDs "04902", "28006", "28106", "28123", "28127" should be recodeed to "0490201", "2800601", "2810601", "2812301", "2812701" during the import process of the trips per person tables for the municipal level data. This can be easily done using the existing approach of SQL-based view creation in the [`{spanishoddata}`](https://github.com/Robinlovelace/spanishoddata){target='_blank'} R package.

### Links to the original files

Imcomplete list, as the issue spans far beyond what was originally identified.

```{r}
files <- spanishoddata:::spod_available_data(1, data_dir = here("data"))

# Filter relevant files
relevant_files <- files |> 
  filter((local_path %in% c(
    trips_per_person_file_2020_03_14,
    trips_per_person_file_2020_10_01)) |
    grepl("zonificacion", local_path)
  )

# Create HTML links
relevant_files <- relevant_files |> 
  mutate(target_url = paste0("<a href='", target_url, "' target='_blank'>", target_url, "</a>"))

# Render the DT table with links
datatable(relevant_files, escape = FALSE, options = list(pageLength = 5))
```
